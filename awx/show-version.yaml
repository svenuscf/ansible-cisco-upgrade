---
# Playbook to display the running version on Cisco IOS Devices

- name: Display running version on Cisco IOS devices
  hosts: all
  gather_facts: false
  tasks:
    - name: Gather facts from Cisco devices
      cisco.ios.ios_facts:
      register: facts

    - name: Display all gathered facts
      debug:
        var: facts

    - name: Display running version
      debug:
        msg: "Host: {{ inventory_hostname }} | Version {{ facts.ansible_facts.ansible_net_version }}."
      register: version_result

    - name: Collect results from each device
      set_fact:
        all_results: "{{ all_results | default([]) + [{ 'host': inventory_hostname, 'version': facts.ansible_facts.ansible_net_version }] }}"
      delegate_to: localhost  # Collect results centrally at localhost

- name: Send email report
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Filter recipients to allowed domains only
      set_fact:
        filtered_recipients: "{{ recipients | select('match', '(^.*@datacom\\.com$|^.*@gmail\\.com$)') | list }}"

    - name: Assert required variables are defined before sending email report
      assert:
        that:
          - smtp_host is defined
          - smtp_port is defined
          - smtp_user is defined
          - smtp_pass is defined
          - recipients is defined
          - filtered_recipients | length > 0  # Ensure there are allowed recipients
        msg: "One or more required variables are missing, or no allowed recipients. Email report will not be sent."

    - name: Send email
      community.general.mail:
        host: "{{ smtp_host }}"
        port: "{{ smtp_port }}" 
        username: "{{ smtp_user }}"
        password: "{{ smtp_pass }}"
        to: "{{ filtered_recipients }}"
        from: "gary.wong@garywong.pro"
        subject: "AWX report - Software version"
        body: |
          Software version report

          {% for host in hostvars %}
          Host: {{ hostvars[host].inventory_hostname }} | Version: {{ hostvars[host].facts.ansible_facts.ansible_net_version }}
          {% endfor %}
        secure: starttls
      delegate_to: localhost
      run_once: true
